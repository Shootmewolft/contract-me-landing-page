---
import Image from "astro/components/Image.astro"

const STEPS = [
  "Crea tu perfil como arrendador e ingresa los datos de tu arrendatario.",
  "Selecciona la plantilla que más se ajusta a tu necesidad: nuestros contratos con diseño legal se adaptan automáticamente a cada caso.",
  "Enviamos el enlace para validación de identidad y firma electrónica.",
  "Consulta la viabilidad financiera del arrendatario antes de firmar (Opcional)",
  "Recibe el contrato firmado en PDF y accede a él desde tu panel cuando quieras.",
  "Usa nuestro módulo de tickets para gestionar reparaciones, renovaciones, cancelaciones o cesiones.",
  "Configura alertas para vencimientos y controla el estado de todos tus contratos activos.",
]
---

<section class="relative flex flex-col gap-12" id="how">
  <header class="flex flex-col items-center gap-4">
    <h2 class="text-3xl lg:text-5xl text-primary text-center font-bold">
      ¿Cómo funciona Contract Me?
    </h2>
    <h3 class="text-base text-center font-medium text-dark-100 max-w-3xl">
      Simplifica la gestión de tus contratos de arrendamiento en solo 7 pasos
    </h3>
  </header>

  <ol
    class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 max-w-7xl mx-auto"
  >
    {
      STEPS.map((step, index) => {
        const COLORS = ["bg-primary", "bg-accent-200", "bg-secondary"]
        const bgClass = COLORS[index % 3]
        const textColorClass = index % 3 === 1 ? "text-primary" : "text-white"
        const numberBgClass = index % 3 === 1 ? "bg-primary" : "bg-white"
        const numberTextClass = index % 3 === 1 ? "text-white" : "text-primary"

        return (
          <li
            class={`step-card ${bgClass} p-6 rounded-3xl shadow-lg flex flex-col gap-4 opacity-0`}
            data-step={index}
            style={`transition-delay: ${index * 150}ms;`}
          >
            <div class="flex items-center gap-4">
              <div
                class={`step-number ${numberBgClass} ${numberTextClass} w-14 h-14 rounded-2xl flex items-center justify-center font-bold text-2xl shadow-md transform`}
              >
                {String(index + 1).padStart(2, "0")}
              </div>
              <div class="step-line h-1 flex-1 bg-white/20 rounded-full w-0" />
            </div>
            <p
              class={`${textColorClass} font-medium text-base leading-relaxed`}
            >
              {step}
            </p>
          </li>
        )
      })
    }
  </ol>

  <Image
    src="/me.svg"
    alt="Parte del logo de Contract Me"
    class="absolute opacity-10 -z-10 w-full h-full top-0 left-0"
    width={1920}
    height={1080}
  />
</section>

<style>
  .step-card {
    transition: all 0.6s cubic-bezier(0.34, 1.56, 0.64, 1);
  }

  .step-card.visible {
    opacity: 1;
    transform: translateY(0);
  }

  .step-number {
    transition: transform 0.5s cubic-bezier(0.68, -0.55, 0.265, 1.55) 0.3s;
  }

  .step-card.visible .step-number {
    transform: scale(1);
  }

  .step-line {
    transition: width 0.8s ease-out 0.5s;
  }

  .step-card.visible .step-line {
    width: 100%;
  }
</style>

<script>
  const observerOptions = {
    root: null,
    rootMargin: "0px",
    threshold: 0.2,
  }

  const observer = new IntersectionObserver((entries) => {
    entries.forEach((entry) => {
      if (entry.isIntersecting) {
        entry.target.classList.add("visible")
        observer.unobserve(entry.target)
      }
    })
  }, observerOptions)

  const stepCards = document.querySelectorAll(".step-card")
  stepCards.forEach((card) => observer.observe(card))
</script>
